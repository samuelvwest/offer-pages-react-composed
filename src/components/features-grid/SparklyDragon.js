import React from 'react';
import { connect } from 'react-redux';
import { LegalNewspapersBasic } from '../LegalText';

const mapStateToProps = (state) => {
    return {
        pageSettings: state.pageSettings,
        variables: state.variables
    }
};
const classesMaker = (styleName) => {
    return `container container--${styleName} features-grid features-grid--${styleName}`
}

const featuresData = [
    {
        type: `global-feature`,
        text: <div>
                <img className="feature-img-new" src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.36/images/Leaf Solid.png" />
                Ancestry Hints®
                <div className="topSpacing plan-para-color">Where we do the searching for you to expand your family&nbsp;tree.</div>
            </div>,
        appliesTo: [ 'usdiscovery', 'worldexplorer', 'allaccess' ]
    }, {
        type: `global-feature`,
        text: <div>
                <img className="feature-img-new" src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.36/images/iconTree.png" />
                Family Tree Building&nbsp;Tools
                <div className="topSpacing plan-para-color">See how you're related to family members across&nbsp;generations.</div>
            </div>,
        appliesTo: [ 'usdiscovery', 'worldexplorer', 'allaccess' ]
    }, {
        type: `global-feature`,
        text: <div>
                <img className="feature-img-new" src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.36/images/tree_plus.png" />
                Family Tree Sharing
                <div className="topSpacing plan-para-color">Invite other family and friends to view or edit your&nbsp;tree.</div>
            </div>,
        appliesTo: [ 'usdiscovery', 'worldexplorer', 'allaccess' ]
    }, {
        type: `global-feature`,
        text: <div>
                <img className="feature-img-new" src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.36/images/pictures.png" />
                Family Media Upload
                <div className="topSpacing plan-para-color">Save and preserve family records, stories, and photos to your&nbsp;account.</div>
            </div>,
        appliesTo: [ 'usdiscovery', 'worldexplorer', 'allaccess' ]
    }, {
        type: `global-feature`,
        text: <div>
                <img className="feature-img-new" src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.36/images/people_man_comment.png" />
                Ancestry Member Community
                <div className="topSpacing plan-para-color">Connect with millions of other Ancestry© members to ask for help, share ideas, and make&nbps;discoveries.</div>
            </div>,
        appliesTo: [ 'usdiscovery', 'worldexplorer', 'allaccess' ]
    }, {
        type: `global-feature`,
        text: <div>
                <img className="feature-img-new mobile-support-img" src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.36/images/phone1.png" />
                Support
                <br /><strong className="textlrg bamboo4">Need help?</strong>
                <span className="bamboo4 help-contact">1-800-ANCESTRY</span>
                <br /><span className="support-timings-txt">7 days a week, 9am–11pm&nbsp;ET</span>
            </div>,
        appliesTo: [ 'usdiscovery', 'worldexplorer', 'allaccess' ]
    }, {
        type: `record-access`,
        text: <div>
                Access to all <span className="bold">U.S. records</span> on&nbsp;Ancestry 
                <br />
                <div className="topSpacing plan-para-color">Explore the billions of records in our U.S. record collection including birth, marriage, death and census&nbsp;records.</div>
            </div>,
        appliesTo: [ 'usdiscovery', 'worldexplorer', 'allaccess' ]
    }, {
        type: `record-access`,
        text: <div>
                <span>
                    <span>Access to all <span className="bold">international records</span> on&nbsp;Ancestry</span> 
                </span>
                <div className="topSpacing plan-para-color">Access more than 3 billion international birth, marriage, death, census, military, religious, and other&nbsp;records.</div>
            </div>,
        appliesTo: [ 'worldexplorer', 'allaccess' ]
    }, {
        type: `record-access`,
        text: <div>
                <span className="table-row-head">
                    <img src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.17/images/newspapers.svg" className="table-newspapers-img" /> 
                </span>
                <div className="tooltip">
                    <span className="textsml basicsubs-wrap">
                        <span className="mr-1">Basic subscription</span>
                        <img className="align-middle" src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.10/images/question.png" />
                    </span>
                    <span className="tooltiptext tooltip-top normal"><LegalNewspapersBasic /></span>
                </div>
                <div className="topSpacing plan-para-color">Search for family stories in more than 142 million U.S. and world articles on&nbps;Newspapers.com™.</div>
            </div>,
        appliesTo: [ 'allaccess' ]
    }, {
        type: `record-access`,
        text: <div>
                <span className="table-row-head">
                    <img src="https://www.ancestrycdn.com/pro-treeinteractions/prototypes/plan-select-mobile/0.0.17/images/fold-3.svg" className="table-fold-img" /> 
                </span>
                <span className="textsml">Additional military records</span>
                <div className="topSpacing plan-para-color">Search for family stories in more than 537 million U.S. military records on&nbsp;Fold3®.</div>
            </div>,
        appliesTo: [ 'allaccess' ]
    }
];

const FeatureRow = ({ featureData, idx, subs, mobileTest, offeringsVar }) => {
    if (featureData.mobile && featureData.fullRow) {
        return ( 
            <tr key={idx} className={mobileTest ? `mobile-row mobile-row--feature-text` : ``}>
                <td className={featureData.type === `global-feature` ? `feature-cell--icon-left` : ``} 
                    colSpan={subs.display.packages.length}
                >
                    {featureData.text}
                </td>
            </tr>
        )
    }
    return (
        <tr key={idx} className={mobileTest ? `mobile-row mobile-row--feature-checks` : ``}>
            {!featureData.mobile &&
                <td className="feature-cell--icon-left">
                    {featureData.text}
                </td>
            }
            {subs.display.packages.map((pkgData) => {
                const pkgVars = pkgData.order === 3  ? {
                    bgClass: `allaccess-bg`,
                    checkClass: `icon-check-fill-allacc`
                } : pkgData.order === 2 ? {
                    bgClass: `worldexplorer-bg`,
                    checkClass: `icon-check-fill-worldex`
                } : {
                    bgClass: `usdiscovery-bg`,
                    checkClass: `icon-check-fill-usdis`
                }
                const includedTest = featureData.appliesTo.indexOf(pkgData.id) !== -1;
                return (
                    <td key={pkgData.id}>
                        <div className={`check-wrapper ${pkgVars.bgClass} ${pkgVars.bgClass}--offerings-${offeringsVar}${!includedTest ? ` cross-bg` : ``}`}>
                            {includedTest ? 
                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" viewBox="0 0 12 10" fill="none" className="plan-comp-check-icon">
                                    <path className={`${pkgVars.checkClass} ${pkgVars.checkClass}--offerings-${offeringsVar}`} fillRule="evenodd" clipRule="evenodd" d="M4.3125 6.23975C3.7002 5.62744 2.47559 4.40283 1.86328 3.79053C1.39746 4.25635 0.46582 5.18799 0 5.65381C1.05762 6.71436 3.17285 8.83545 4.23047 9.896C6.17285 7.95361 10.0576 4.06885 12 2.12646C11.5547 1.67822 10.6641 0.781738 10.2188 0.333496C8.74219 1.81006 5.78906 4.76318 4.3125 6.23975V6.23975Z" fill="white"></path>
                                </svg> : 
                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" viewBox="0 0 12 12" fill="none" className="plan-comp-cross-icon">
                                    <path fillRule="evenodd" clipRule="evenodd" d="M12 1.81641C11.5488 1.3623 10.6465 0.454102 10.1953 0C9.14648 1.04883 7.04883 3.14648 6 4.19531C4.9541 3.14648 2.8623 1.04883 1.81641 0C1.3623 0.454102 0.454102 1.3623 0 1.81641C1.04883 2.8623 3.14648 4.9541 4.19531 6C3.14648 7.04883 1.04883 9.14648 0 10.1953C0.454102 10.6465 1.3623 11.5488 1.81641 12C2.8623 10.9512 4.9541 8.85352 6 7.80469C7.04883 8.85352 9.14648 10.9512 10.1953 12C10.6465 11.5488 11.5488 10.6465 12 10.1953C10.9512 9.14648 8.85352 7.04883 7.80469 6C8.85352 4.9541 10.9512 2.8623 12 1.81641V1.81641Z" fill="#d6d5d5"></path>
                                </svg>
                            }
                        </div>
                    </td>
                )
            })}
        </tr>
    )
}

export class SparklyDragon extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            showIncludedInAll: !(this.props.pageSettings.windowWidth < 768)
        }
    }
    toggleAllIncludedState = () => {
        this.setState((prevState) => {
            return { 
                showIncludedInAll: !prevState.showIncludedInAll 
            }
        })
    }
    render() {
        const pS = this.props.pageSettings;
        const subs = pS.subscriptions;
        const mobileTest = this.props.pageSettings.windowWidth < 768;
        const filteredFeaturesData = [...featuresData].filter((featureData) => subs.display.packages.some((pkgData) => featureData.appliesTo.indexOf(pkgData.id) > -1));
        const featureRowsAndHeadsArray = [];
        filteredFeaturesData.forEach((featureData) => {
            featureRowsAndHeadsArray.push({
                mobile: true,
                fullRow: true,
                type: featureData.type,
                text: featureData.text
            });
            featureRowsAndHeadsArray.push({
                mobile:true,
                fullRow: false,
                type: featureData.type,
                appliesTo: featureData.appliesTo
            });
        })
        const useThisFeaturesArray = mobileTest ? featureRowsAndHeadsArray : filteredFeaturesData;
        const globalHeadingCells = subs.display.packages.map((pkgData, index, array) =>{
            const recordsTriangleClasses = []
            array.forEach((pD) => recordsTriangleClasses.push(`triangle-start--${pD.id}`))
            const pkgVars = pkgData.order === 3  ? {
                imgFile: <svg width="38" height="35" viewBox="0 0 42 37" fill="none" xmlns="http://www.w3.org/2000/svg" className="allaccess-img">
                            <circle cx="17" cy="20" r="16" fill="white" stroke="white" strokeWidth="2"></circle>
                            <path d="M17 5C8.73846 5 2 11.7385 2 20C2 28.3077 8.73846 35 17 35C25.2615 35 32 28.3077 32 20C32 11.7385 25.2615 5 17 5ZM16.9077 6.8L18.2462 7.35385L17.6 8.87692C16.8615 9.24615 16.1231 9.47692 15.3385 9.75385L14.8769 10.5846L14.4615 10.7692L13.8615 9.61538L14.2769 9.15385V8.69231L13.1231 7.86154L13.4923 7.53846L15.3846 6.98462L16.9077 6.8ZM13.3077 6.89231L13.4923 7.21538C13.1231 7.35385 12.8 7.49231 12.4308 7.63077L11.8769 7.76923L11.6462 8L11 7.90769L11.1385 7.72308L11.3692 7.63077L11.7846 7.4L12.2923 7.35385L12.6154 6.98462L13.3077 6.89231ZM10.2615 8.32308L10.5385 8.78462L10.7231 8.41538L11.1846 8.32308L11.2308 8.6L12.2 8.69231L12.4308 9.24615L13.0308 9.47692L12.4769 9.89231C12.1538 9.66154 11.7846 9.47692 11.4615 9.24615L11 9.01539C10.7692 9.15385 10.5846 9.33846 10.3538 9.47692L10.0308 10.0769H9.56923L9.70769 9.61538L9.15385 10.1692L7.90769 10.9077L8.04615 11.4154L9.01539 11.8308L9.15385 12.4769L9.52308 11.6923L10.0308 11.5077L9.98461 11.1385L10.5846 10.1692L11.2769 10.5385L11.1846 11L11.7846 10.7692L12.0615 11.3231L11.9692 11.6923L12.3385 11.8308L12.6615 12.1077L12.5231 12.4308L11.6462 12.7538H11.0462L10.1692 13.1231H11.5538L11.0923 13.8154L10.2154 14L9.8 14.6L9.06154 14.8769L8.73846 15.7538L7.76923 16.5846L7.63077 17.6923L7.07692 17L6.29231 16.8615L6.15385 17.2308H5.50769L4.81538 17.7846L4.67692 18.4769L4.72308 19.1231L5.27692 19.4L5.64615 19.2615L6.01539 18.7538H6.38462C6.33846 19.1692 6.29231 19.5846 6.24615 20L6.89231 19.9538V20.5538L7.07692 21.1538C7.30769 21.2923 7.67692 21.2923 7.95385 21.3846V21.2462L8.83077 20.4154L9.70769 21.0615L10.7231 20.9231L11.1385 22.0308L11.8769 22.1692L12.2923 23C13.1231 23.4154 13.9538 23.8769 14.7846 24.2923L14.6923 25.1231L14.0462 26L14.1385 27.2L13.7692 28.0769L12.9846 28.2615L12.6154 28.7692L12.7538 29.1385L12.2923 30.3846L11.6462 30.6615L11.4615 31.0308L11.0923 31.4462L11.2308 31.7231C11.2308 31.7231 11.0923 31.8154 11 31.8615C10.9077 31.9538 9.29231 31.0769 9.24615 30.9385C9.2 30.8 9.24615 30.8 9.24615 30.8L9.61538 29.4154L9.2 28.7692L9.24615 27.5692L8.87692 27.0154L8 26.1846L7.07692 24.5231L7.35385 23.6462L7.21538 23.4154L7.58462 22.9538L7.95385 21.8462V21.7077L7.63077 21.5692L7.21538 21.6154L6.52308 21.1077L6.06154 20.5077L5 20.2308L3.89231 19.5846C3.89231 19.5846 3.43077 18.8923 3.43077 18.7538C4.03077 13.5846 6.84615 10.7692 8.23077 9.47692C8.32308 9.43077 8.78462 9.33846 8.78462 9.33846L9.01539 8.69231L9.43077 8.73846L9.75385 8.92308L9.70769 9.56923L9.8 9.43077L10.2154 9.06154L10.1692 8.46154L10.2615 8.32308ZM23.3231 8.73846L23.9692 8.96923L25.1692 9.2L24.8923 9.56923H24.2L24.8923 10.2615L25.4 9.66154L25.5385 9.38462C25.5385 9.38462 27.4769 11.1385 28.5846 13.0769C29.6923 15.0154 30.2462 17.2769 30.2462 17.7385L29.9231 18.1538C29.6923 17.8769 29.4154 17.6462 29.1385 17.4154L28.5385 17.5077L28.0769 16.8615V17.6462L28.4923 17.9692L28.8615 18.3385L29.2308 17.8308C29.3231 18.0154 29.4154 18.2462 29.5077 18.4308V19.0308L29.0923 19.5385L28.2154 20.1385L27.6154 20.7385C27.8923 20.7385 28.1692 20.6462 28.4923 20.6V21.0154L27.8462 22.5385L27.2923 23.1385L26.8308 24.1077V25.7692L26.9692 26.4154L26.7385 26.6923L26.2308 27.0615L25.6308 27.5231L26.0923 28.0769L25.4462 28.6769L25.5846 29.0462L24.5692 30.1538H23.9231L23.3231 30.5231H23V30.0154L22.8615 29.1385C22.6769 28.5385 22.4462 27.9385 22.2154 27.3846C22.2154 26.9692 22.2154 26.5538 22.2615 26.1385L22.4923 25.5385L22.1231 24.8462L22.1692 23.9231L21.7077 23.3231L21.9385 22.5846L21.5231 22.1231H20.8769L20.6462 21.8923L20 22.2615L19.6769 21.9846L19.0769 22.5385C18.6615 22.0308 18.2 21.5231 17.7385 21.0615L17.1846 19.8615L17.6462 19.1692L17.4154 18.8462L17.9692 17.5538C18.4308 17 18.9385 16.4462 19.4 15.8923L20.2769 15.6615L21.2462 15.5231L21.8923 15.7077L22.8154 16.6308L23.1385 16.2615L23.6462 16.1231L24.5231 16.4462H25.1692L25.6308 16.0308L25.8154 15.7538L25.4 15.4769L24.6154 15.4308C24.3846 15.1538 24.2 14.8308 23.9692 14.5538L23.7385 14.6462L23.6 15.4308L23.1385 14.8769L23.0462 14.2769L22.4923 13.9077H22.3077L22.8615 14.5077L22.6769 15.0154L22.2615 15.1538L22.4923 14.6462L22.0769 14.3692L21.6154 13.9538L20.8769 14.0923L20.6923 14.3231L20.2769 14.6462L20.0462 15.2923L19.4 15.6154L19.1231 15.2923H18.8V14.2308L19.4462 13.9077H20L19.8615 13.4923L19.4462 13.0769L20.1385 12.9385L20.5077 12.5231L20.6462 12.2462L20.2769 12.6154L19.6769 12.7538L19.8154 12.0615V11.5538L19.6308 11.3231V11H19.9077C20.0462 11.3231 20.2308 11.6 20.3231 11.8769L20.6923 12.2462L20.8769 12.0154H21.4308L21.2923 11.6L21.6615 11.4154V11.8769L22.4 12.0154L23.1846 11.3692L23.2308 11.0462L23.8769 10.5846C23.6462 10.6308 23.4154 10.6308 23.1846 10.7231V10.2154L23.4154 9.61538H23.1846L22.5385 10.1692L22.4 10.4462L22.5385 10.8154L22.3077 11.5077L21.9385 11.2769L21.5692 10.9077L21.0615 11.2769L20.8308 10.3538L21.8 9.70769V9.38462L22.4 9.01539L23.3231 8.73846ZM18.2923 9.47692L18.6154 9.84615L17.9692 10.2615L17.6 10.0308L17.6462 9.66154L17.8308 9.70769L18.2923 9.47692ZM11.5538 9.61538L12.0615 9.84615V10.2615H11.6462L11.1846 9.89231L11.5538 9.61538ZM19.4 11.6462L19.5846 12.1538L19.1692 12.3846L19.0308 11.7385L19.4 11.6462ZM12.3385 12.7077L12.8462 13.0308L12.4769 13.4923L12.3385 12.7077Z" fill="#61527E"></path>
                            <circle className="circleplus" cx="32.5" cy="9.5" r="8.5" fill="#61527E" stroke="white" strokeWidth="2"></circle>
                            <rect x="28.75" y="8.79688" width="7.5" height="1.40625" rx="0.703125" fill="white"></rect>
                            <rect x="31.7969" y="13.25" width="7.5" height="1.40625" rx="0.703125" transform="rotate(-90 31.7969 13.25)" fill="white"></rect>
                        </svg>,
                colorClass: `color-allaccess`
            } : pkgData.order === 2 ? {
                imgFile: <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg" className="usnintrecords-img">
                            <path d="M14 0C6.28923 0 0 6.28923 0 14C0 21.7538 6.28923 28 14 28C21.7108 28 28 21.7538 28 14C28 6.28923 21.7108 0 14 0ZM13.9138 1.68L15.1631 2.19692L14.56 3.61846C13.8708 3.96308 13.1815 4.17846 12.4492 4.43692L12.0185 5.21231L11.6308 5.38462L11.0708 4.30769L11.4585 3.87692V3.44615L10.3815 2.67077L10.7262 2.36923L12.4923 1.85231L13.9138 1.68ZM10.5538 1.76615L10.7262 2.06769C10.3815 2.19692 10.08 2.32615 9.73538 2.45538L9.21846 2.58462L9.00308 2.8L8.4 2.71385L8.52923 2.54154L8.74462 2.45538L9.13231 2.24L9.60615 2.19692L9.90769 1.85231L10.5538 1.76615ZM7.71077 3.10154L7.96923 3.53231L8.14154 3.18769L8.57231 3.10154L8.61539 3.36L9.52 3.44615L9.73538 3.96308L10.2954 4.17846L9.77846 4.56615C9.47692 4.35077 9.13231 4.17846 8.83077 3.96308L8.4 3.74769C8.18462 3.87692 8.01231 4.04923 7.79692 4.17846L7.49539 4.73846H7.06462L7.19385 4.30769L6.67692 4.82462L5.51385 5.51385L5.64308 5.98769L6.54769 6.37538L6.67692 6.97846L7.02154 6.24615L7.49539 6.07385L7.45231 5.72923L8.01231 4.82462L8.65846 5.16923L8.57231 5.6L9.13231 5.38462L9.39077 5.90154L9.30462 6.24615L9.64923 6.37538L9.95077 6.63385L9.82154 6.93538L9.00308 7.23692H8.44308L7.62462 7.58154H8.91692L8.48615 8.22769L7.66769 8.4L7.28 8.96L6.59077 9.21846L6.28923 10.0369L5.38462 10.8123L5.25538 11.8462L4.73846 11.2L4.00615 11.0708L3.87692 11.4154H3.27385L2.62769 11.9323L2.49846 12.5785L2.54154 13.1815L3.05846 13.44L3.40308 13.3108L3.74769 12.8369H4.09231C4.04923 13.2246 4.00615 13.6123 3.96308 14L4.56615 13.9569V14.5169L4.73846 15.0769C4.95385 15.2062 5.29846 15.2062 5.55692 15.2923V15.1631L6.37538 14.3877L7.19385 14.9908L8.14154 14.8615L8.52923 15.8954L9.21846 16.0246L9.60615 16.8C10.3815 17.1877 11.1569 17.6185 11.9323 18.0062L11.8462 18.7815L11.2431 19.6L11.3292 20.72L10.9846 21.5385L10.2523 21.7108L9.90769 22.1846L10.0369 22.5292L9.60615 23.6923L9.00308 23.9508L8.83077 24.2954L8.48615 24.6831L8.61539 24.9415C8.61539 24.9415 8.48615 25.0277 8.4 25.0708C8.31385 25.1569 6.80615 24.3385 6.76308 24.2092C6.72 24.08 6.76308 24.08 6.76308 24.08L7.10769 22.7877L6.72 22.1846L6.76308 21.0646L6.41846 20.5477L5.6 19.7723L4.73846 18.2215L4.99692 17.4031L4.86769 17.1877L5.21231 16.7569L5.55692 15.7231V15.5938L5.25538 15.4646L4.86769 15.5077L4.22154 15.0338L3.79077 14.4738L2.8 14.2154L1.76615 13.6123C1.76615 13.6123 1.33538 12.9662 1.33538 12.8369C1.89538 8.01231 4.52308 5.38462 5.81538 4.17846C5.90154 4.13539 6.33231 4.04923 6.33231 4.04923L6.54769 3.44615L6.93538 3.48923L7.23692 3.66154L7.19385 4.26462L7.28 4.13539L7.66769 3.79077L7.62462 3.23077L7.71077 3.10154ZM19.9015 3.48923L20.5046 3.70462L21.6246 3.92L21.3662 4.26462H20.72L21.3662 4.91077L21.84 4.35077L21.9692 4.09231C21.9692 4.09231 23.7785 5.72923 24.8123 7.53846C25.8462 9.34769 26.3631 11.4585 26.3631 11.8892L26.0615 12.2769C25.8462 12.0185 25.5877 11.8031 25.3292 11.5877L24.7692 11.6738L24.3385 11.0708V11.8031L24.7262 12.1046L25.0708 12.4492L25.4154 11.9754C25.5015 12.1477 25.5877 12.3631 25.6738 12.5354V13.0954L25.2862 13.5692L24.4677 14.1292L23.9077 14.6892C24.1662 14.6892 24.4246 14.6031 24.7262 14.56V14.9477L24.1231 16.3692L23.6062 16.9292L23.1754 17.8338V19.3846L23.3046 19.9877L23.0892 20.2462L22.6154 20.5908L22.0554 21.0215L22.4862 21.5385L21.8831 22.0985L22.0123 22.4431L21.0646 23.4769H20.4615L19.9015 23.8215H19.6V23.3477L19.4708 22.5292C19.2985 21.9692 19.0831 21.4092 18.8677 20.8923C18.8677 20.5046 18.8677 20.1169 18.9108 19.7292L19.1262 19.1692L18.7815 18.5231L18.8246 17.6615L18.3938 17.1015L18.6092 16.4123L18.2215 15.9815H17.6185L17.4031 15.7662L16.8 16.1108L16.4985 15.8523L15.9385 16.3692C15.5508 15.8954 15.12 15.4215 14.6892 14.9908L14.1723 13.8708L14.6031 13.2246L14.3877 12.9231L14.9046 11.7169C15.3354 11.2 15.8092 10.6831 16.24 10.1662L17.0585 9.95077L17.9631 9.82154L18.5662 9.99385L19.4277 10.8554L19.7292 10.5108L20.2031 10.3815L21.0215 10.6831H21.6246L22.0554 10.2954L22.2277 10.0369L21.84 9.77846L21.1077 9.73538C20.8923 9.47692 20.72 9.17539 20.5046 8.91692L20.2892 9.00308L20.16 9.73538L19.7292 9.21846L19.6431 8.65846L19.1262 8.31385H18.9538L19.4708 8.87385L19.2985 9.34769L18.9108 9.47692L19.1262 9.00308L18.7385 8.74462L18.3077 8.35692L17.6185 8.48615L17.4462 8.70154L17.0585 9.00308L16.8431 9.60615L16.24 9.90769L15.9815 9.60615H15.68V8.61539L16.2831 8.31385H16.8L16.6708 7.92615L16.2831 7.53846L16.9292 7.40923L17.2738 7.02154L17.4031 6.76308L17.0585 7.10769L16.4985 7.23692L16.6277 6.59077V6.11692L16.4554 5.90154V5.6H16.7138C16.8431 5.90154 17.0154 6.16 17.1015 6.41846L17.4462 6.76308L17.6185 6.54769H18.1354L18.0062 6.16L18.3508 5.98769V6.41846L19.04 6.54769L19.7723 5.94461L19.8154 5.64308L20.4185 5.21231C20.2031 5.25538 19.9877 5.25538 19.7723 5.34154V4.86769L19.9877 4.30769H19.7723L19.1692 4.82462L19.04 5.08308L19.1692 5.42769L18.9538 6.07385L18.6092 5.85846L18.2646 5.51385L17.7908 5.85846L17.5754 4.99692L18.48 4.39385V4.09231L19.04 3.74769L19.9015 3.48923ZM15.2062 4.17846L15.5077 4.52308L14.9046 4.91077L14.56 4.69538L14.6031 4.35077L14.7754 4.39385L15.2062 4.17846ZM8.91692 4.30769L9.39077 4.52308V4.91077H9.00308L8.57231 4.56615L8.91692 4.30769ZM16.24 6.20308L16.4123 6.67692L16.0246 6.89231L15.8954 6.28923L16.24 6.20308ZM9.64923 7.19385L10.1231 7.49539L9.77846 7.92615L9.64923 7.19385Z" fill="#0079A3"/>
                        </svg>,
                colorClass: `color-worldexplorer`
            } : {
                imgFile: <svg width="62" height="38" viewBox="0 0 62 38" fill="none" xmlns="http://www.w3.org/2000/svg" className="usrecords-img">
                            <path d="M5.20986 0.0538237C5.18051 0.1272 5.21475 1.17407 5.25389 1.53607L5.28324 1.78066L5.21475 1.49204C5.14137 1.18874 5.08756 1.12025 4.89678 1.12025C4.82829 1.12025 4.74024 1.0909 4.7011 1.05177C4.65708 1.01263 4.56413 0.968606 4.49565 0.958823C4.42716 0.944147 4.13365 0.777823 3.84992 0.582147C3.47813 0.33266 3.30692 0.239715 3.23843 0.25928C3.11124 0.303308 3.00851 0.552795 3.0134 0.802283C3.0183 0.909903 3.02319 1.13004 3.02319 1.29147C3.02808 1.79533 3.02808 1.9959 3.03297 2.10841C3.03786 2.17201 3.02808 2.40193 3.0134 2.62206C2.99384 2.9645 3.00362 3.03298 3.07211 3.07212C3.11613 3.09658 3.14548 3.12593 3.13081 3.13571C3.11613 3.1455 3.04765 3.19442 2.97427 3.23844C2.88132 3.29714 2.8373 3.36563 2.8373 3.44879C2.8373 3.62001 2.71011 4.10431 2.56824 4.46631C2.50465 4.63263 2.36278 5.00441 2.25516 5.30282C2.06927 5.81647 1.629 6.89268 1.5067 7.1226C1.47735 7.1813 1.36973 7.31827 1.267 7.4259C1.15938 7.53352 1.07622 7.67049 1.07622 7.73409C1.07622 7.79279 1.00773 7.91508 0.919675 8.00314C0.768027 8.15968 0.763135 8.17436 0.812054 8.40428C0.841405 8.53636 0.846297 8.68311 0.826729 8.73203C0.807162 8.78584 0.787594 9.13806 0.787594 9.51963C0.782702 10.2045 0.782702 10.2192 0.635946 10.4491C0.552783 10.5763 0.489189 10.6986 0.489189 10.7181C0.489189 10.7426 0.381567 10.9236 0.244594 11.1242C0.0195676 11.4617 0 11.5106 0 11.7846C0 11.9754 0.0489189 12.2297 0.136973 12.5135C0.273946 12.9244 0.273946 12.9488 0.195676 13.0614C0.0635946 13.2424 0.00978378 13.4918 0.00978378 13.8734C0.00978378 14.2109 0.0195676 14.2403 0.249486 14.5827C0.474513 14.9203 0.489189 14.9594 0.489189 15.2578C0.489189 15.5513 0.503865 15.5953 0.675081 15.8057C0.772918 15.9329 0.885432 16.0356 0.924567 16.0405C0.968594 16.0405 0.939243 16.0894 0.85608 16.1628C0.728891 16.2851 0.724 16.3047 0.743567 16.6765L0.758243 17.0629L1.0273 17.3369L1.29146 17.6059L1.18384 17.7184C1.06643 17.8407 0.929459 18.1929 0.929459 18.369C0.929459 18.4375 0.997945 18.5452 1.09578 18.6332C1.19362 18.7213 1.27678 18.8533 1.29146 18.9463C1.3257 19.1322 1.67792 19.8806 1.7513 19.9247C1.78065 19.9442 1.79043 20.0323 1.77576 20.1252C1.75619 20.2475 1.77576 20.3258 1.84913 20.4236C1.94208 20.5606 1.94208 20.5655 1.85403 20.7759C1.70238 21.1232 1.72684 21.2357 1.98611 21.4363C2.1133 21.5341 2.2943 21.6319 2.39213 21.6466C2.48997 21.6662 2.715 21.7542 2.896 21.8423C3.14059 21.9646 3.23354 22.0429 3.258 22.1309C3.30202 22.307 3.58086 22.532 3.81078 22.5712C4.0407 22.6103 4.13365 22.6984 4.09451 22.85C4.05048 23.0066 4.14343 23.1337 4.29508 23.1337C4.45162 23.1337 4.69621 23.3686 4.92613 23.7452C5.0631 23.9654 5.08267 24.0485 5.12181 24.5622C5.15116 24.8753 5.19519 25.1639 5.22943 25.203C5.26367 25.2519 5.47402 25.296 5.83602 25.3302C6.7557 25.4231 7.88572 25.5308 7.9591 25.5308C7.99335 25.5308 8.04226 25.5797 8.06672 25.6433C8.09118 25.7069 8.23794 25.8341 8.39937 25.9319C8.55591 26.0249 9.23589 26.4504 9.90607 26.876C10.5812 27.2967 11.4079 27.8202 11.7503 28.0354L12.3765 28.4219L13.8538 28.6176C15.6834 28.8621 15.972 28.8866 16.065 28.8132C16.1041 28.779 16.1481 28.6469 16.1677 28.5099C16.1873 28.3778 16.2215 28.2702 16.2411 28.2702C16.3829 28.2702 17.9728 28.4708 18.007 28.4953C18.0315 28.5099 18.0804 28.5931 18.1196 28.6763C18.1538 28.7643 18.5305 29.1899 18.9463 29.6204C19.8024 30.5009 20.0274 30.8434 19.9785 31.1564C19.9393 31.3961 20.0861 31.6848 20.36 31.9C20.8786 32.3158 21.7396 32.8784 21.8912 32.9028C22.0282 32.9273 22.082 32.9028 22.2679 32.7267C22.4146 32.5947 22.532 32.4185 22.625 32.2082C22.7473 31.9098 22.7668 31.8902 22.9136 31.8902C23.0017 31.8902 23.0897 31.8707 23.1142 31.8462C23.1435 31.8168 23.2658 31.8266 23.4321 31.8707C23.5789 31.9098 23.799 31.9391 23.9213 31.9391C24.1806 31.9391 24.2246 31.9636 24.3029 32.1593C24.3371 32.2375 24.5035 32.4234 24.6796 32.5653C24.9437 32.7903 25.0024 32.8686 25.066 33.0838C25.1981 33.529 25.4818 34.0965 25.7069 34.3557C25.8292 34.4927 25.927 34.6395 25.927 34.6786C25.927 34.8107 26.1618 35.1042 26.2939 35.1384C26.4015 35.1678 26.4162 35.1971 26.4162 35.383C26.4162 35.4955 26.4553 35.7108 26.5091 35.8575C26.6217 36.1902 26.925 36.7919 27.013 36.8702C27.1695 36.9974 28.2017 37.4181 28.4855 37.467C28.6518 37.5012 28.8866 37.5844 29.0089 37.6627C29.1948 37.7752 29.2682 37.7947 29.4932 37.7801C29.64 37.7703 29.7769 37.736 29.8014 37.7018C29.8797 37.5746 29.8405 37.3496 29.7182 37.2224C29.64 37.1392 29.547 36.9289 29.4638 36.6402C29.3464 36.2342 29.3415 36.1657 29.3954 35.9554C29.4247 35.8282 29.4394 35.6863 29.4247 35.6423C29.4051 35.5983 29.4247 35.5151 29.4687 35.4515C29.5128 35.3928 29.5617 35.2412 29.5764 35.114C29.6008 34.9477 29.6302 34.8743 29.6987 34.8596C29.7476 34.8449 29.8356 34.7569 29.8894 34.6639C29.953 34.5514 30.0411 34.4829 30.1291 34.4682C30.227 34.4487 30.2857 34.3949 30.3199 34.297C30.3542 34.1992 30.4129 34.1405 30.5058 34.1209C30.7015 34.072 30.77 34.0035 30.77 33.8617C30.77 33.7638 30.7847 33.754 30.8531 33.7932C30.9608 33.8519 31.2298 33.7442 31.8609 33.4018C32.2522 33.1866 32.3452 33.1132 32.3843 32.986C32.4137 32.898 32.5115 32.7757 32.6044 32.7121C32.7169 32.6387 32.7757 32.5604 32.7757 32.4821C32.7757 32.3843 32.7952 32.3696 32.9028 32.3941C32.9762 32.4039 33.2012 32.3745 33.4067 32.3256C33.6122 32.2718 34.0133 32.1788 34.297 32.1153L34.8156 31.9978L35.2265 32.0908C35.4515 32.1397 35.7548 32.2082 35.8967 32.2424C36.2049 32.3109 36.3125 32.2669 36.3369 32.0663C36.3516 31.9538 36.3712 31.944 36.4837 31.9685C36.5571 31.9832 36.6794 32.0712 36.7528 32.1642C36.831 32.2571 36.9387 32.3305 36.9925 32.3305C37.0463 32.3305 37.1686 32.4088 37.2566 32.5017C37.4181 32.6729 37.7898 32.8686 37.9562 32.8686C38.0051 32.8686 38.0931 32.8148 38.1567 32.7463C38.2888 32.6093 38.3769 32.5898 38.4209 32.6974C38.4796 32.8588 38.8612 32.7512 38.9394 32.5506L38.9835 32.4332L39.2281 32.536C39.365 32.5947 39.4922 32.6876 39.5216 32.7512C39.5998 32.9322 39.7368 32.9371 40.0597 32.7708C40.3043 32.6485 40.3581 32.5995 40.3581 32.5017C40.3581 32.3794 40.3483 32.3696 39.683 31.9538L39.5656 31.8804L39.683 31.7581C39.7417 31.6897 39.8542 31.6065 39.9325 31.5674C40.0841 31.4842 40.1086 31.313 39.9961 31.1026C39.9325 30.9754 39.9325 30.9706 40.1135 30.8874C40.2651 30.8189 40.3728 30.8091 40.6173 30.8336C40.8375 30.858 40.9451 30.8531 40.9696 30.814C40.9891 30.7847 41.0332 30.77 41.0674 30.7847C41.1016 30.7944 41.1701 30.7798 41.2239 30.7406C41.3022 30.6819 41.3267 30.6868 41.4196 30.7749C41.4734 30.8287 41.6055 30.8825 41.7131 30.8972C41.8697 30.9167 41.9186 30.9021 42.0164 30.7944C42.0898 30.7162 42.1876 30.6673 42.2708 30.6673C42.3393 30.6673 42.4273 30.6379 42.4567 30.5988C42.5105 30.5352 43.1171 30.5205 43.2932 30.5792C43.8362 30.7602 44.0906 30.8238 44.1982 30.8042C44.2961 30.7847 44.3205 30.7944 44.2961 30.8483C44.2814 30.8923 44.3352 30.9852 44.4379 31.0782C44.5309 31.1613 44.614 31.2836 44.6238 31.3521C44.6483 31.5576 44.8391 31.5331 45.3772 31.2543C45.6462 31.1124 45.9153 30.9363 45.9838 30.858C46.2528 30.5596 46.6246 30.7064 47.2556 31.3521C47.5247 31.6261 47.7253 31.7924 47.8182 31.812C48.0432 31.8658 48.2585 32.2278 48.2536 32.5506C48.2487 32.6876 48.2242 32.849 48.19 32.9028C48.097 33.079 48.1215 33.4948 48.234 33.6513C48.2878 33.7296 48.371 33.803 48.4199 33.8176C48.4737 33.8372 48.5031 33.9008 48.508 34.0133C48.508 34.1356 48.5569 34.2383 48.6792 34.3704C48.7721 34.478 48.9189 34.6639 49.002 34.7911C49.1195 34.9623 49.1928 35.021 49.2858 35.021C49.364 35.021 49.4081 35.0504 49.4081 35.0944C49.4081 35.1384 49.5059 35.2754 49.6233 35.4026C49.8679 35.6717 49.9462 35.8037 49.9462 35.9603C49.9462 36.0924 50.0293 36.1951 50.137 36.1951C50.3033 36.1951 50.6262 36.4054 50.7729 36.6158C50.861 36.7381 50.9882 36.8555 51.0469 36.8799C51.1104 36.9044 51.1692 36.9729 51.1789 37.0365C51.1887 37.1001 51.2327 37.1539 51.2866 37.1637C51.4627 37.1979 51.9225 37.0218 52.1426 36.8359L52.3579 36.65L52.309 36.4005C52.2649 36.1706 52.2698 36.1413 52.3823 35.9945C52.4997 35.8478 52.5046 35.8233 52.4508 35.5738C52.4117 35.3732 52.4117 35.2461 52.4508 35.07C52.4997 34.8596 52.4949 34.8058 52.3921 34.571C52.3334 34.4291 52.1818 34.1747 52.0644 34.0084C51.947 33.8421 51.7953 33.5437 51.7268 33.3431C51.6388 33.0838 51.5703 32.9615 51.4871 32.9175C51.3502 32.8441 51.2866 32.6191 51.3355 32.3403C51.3599 32.174 51.3355 32.1201 51.13 31.8315C51.0028 31.6505 50.8316 31.4744 50.7436 31.4304C50.6555 31.3864 50.5821 31.3179 50.5821 31.2787C50.5821 31.2347 50.4598 31.0537 50.3131 30.8776C50.0636 30.5743 50.044 30.5303 50.0489 30.315C50.0587 30.134 50.0342 30.0509 49.956 29.9677C49.8973 29.9041 49.8337 29.7818 49.819 29.6889C49.7994 29.5959 49.7554 29.4736 49.7212 29.4198C49.6184 29.2535 49.5353 28.373 49.6037 28.1186C49.6673 27.8936 49.8532 27.4973 49.9951 27.2918C50.0391 27.2234 50.0929 27.106 50.1125 27.0277C50.1761 26.7635 50.4305 26.47 50.8952 26.1227C51.2425 25.8634 51.3697 25.7362 51.4089 25.6139C51.4431 25.521 51.5067 25.4085 51.5605 25.3596C51.6094 25.3155 51.7073 25.1345 51.7757 24.9633C52.0301 24.3274 52.2454 24.1023 52.6465 24.0436C52.9253 24.0045 53.1406 23.7844 53.1993 23.4957C53.2629 23.1435 53.7325 22.6152 54.1043 22.4684C54.2266 22.4195 54.3978 22.3266 54.4859 22.263C54.6179 22.1603 54.6424 22.1162 54.6424 21.9303C54.6424 21.7689 54.6179 21.7053 54.5446 21.6662C54.4907 21.6368 54.4223 21.627 54.3978 21.6417C54.3685 21.6564 54.3489 21.6173 54.3489 21.5488C54.3489 21.4509 54.3733 21.4216 54.4516 21.4216C54.6081 21.4216 54.8674 21.2455 54.9799 21.0596C55.1218 20.8346 55.1218 20.3845 54.9848 20.2475C54.9066 20.1693 54.8625 20.1595 54.7647 20.1986C54.5299 20.2867 54.4418 20.2133 54.662 20.1106C54.8332 20.0323 54.8723 19.8024 54.75 19.5725C54.6962 19.4697 54.6375 19.3181 54.6228 19.23C54.5739 19.0246 54.3391 18.8289 54.1287 18.8289C54.0064 18.8289 53.9624 18.8044 53.938 18.7213C53.9233 18.6577 53.9331 18.5892 53.9575 18.5647C54.0309 18.4913 54.0162 18.281 53.9331 18.1734C53.8939 18.1196 53.8597 18.0168 53.8597 17.9435C53.8597 17.738 53.7716 17.5423 53.6347 17.4298C53.5417 17.3564 53.5173 17.2977 53.5368 17.2243C53.5662 17.1363 53.5906 17.1314 53.7325 17.1754C53.8499 17.2146 53.9037 17.2635 53.938 17.3809C53.9673 17.4836 54.0162 17.5374 54.0945 17.5472C54.1923 17.5619 54.207 17.5863 54.1777 17.6695C54.1581 17.7282 54.1336 17.9092 54.119 18.0706C54.0994 18.3103 54.1092 18.3886 54.1874 18.4816C54.2559 18.5647 54.3097 18.5892 54.3831 18.5647C54.525 18.5207 54.7207 18.1245 54.8185 17.694C54.8625 17.4983 54.9408 17.2684 54.9897 17.1852C55.0582 17.0678 55.0827 16.9357 55.0827 16.6569C55.0827 16.2704 55.0435 16.1432 54.8723 15.9525C54.7745 15.8448 54.7745 15.8448 54.8674 15.8448C55.0191 15.8448 55.249 15.566 55.4691 15.1257L55.6697 14.7197V14.0495V13.3744L56.0023 13.1739C56.1833 13.0614 56.4671 12.9097 56.6334 12.8363C56.8829 12.7287 56.966 12.6553 57.0932 12.4645C57.2596 12.2053 57.2644 12.0781 57.103 12.0096C57.015 11.9656 57.0443 11.9411 57.3916 11.7699C57.6264 11.6574 57.7977 11.54 57.827 11.4715C57.8662 11.3883 57.9102 11.3688 58.0129 11.3834C58.1254 11.3981 58.1792 11.3688 58.3064 11.2024C58.4434 11.0312 58.4825 11.0068 58.6097 11.0361C58.6978 11.0508 58.7809 11.0361 58.8299 10.997C58.8739 10.9578 59.0011 10.8845 59.1136 10.8306C59.3044 10.7377 59.3141 10.7181 59.3288 10.498C59.3484 10.1996 59.138 9.77889 58.9717 9.77889C58.7809 9.77889 58.6048 9.95989 58.6048 10.1605V10.3366L58.4532 10.1311C58.37 10.0186 58.2624 9.92565 58.2184 9.92565C58.0814 9.92565 58.0716 9.88163 58.1548 9.65171C58.2282 9.45603 58.2282 9.42668 58.1499 9.26525C58.0569 9.07446 58.0618 9.03533 58.2428 8.41895C58.3113 8.19882 58.3553 7.95422 58.3504 7.88084C58.3358 7.76833 58.3553 7.74876 58.4727 7.73409C58.551 7.7243 58.6391 7.6656 58.6831 7.59711C58.7271 7.53352 58.8054 7.47971 58.8592 7.47971C59.006 7.47971 59.2212 7.22044 59.2848 6.96606C59.3288 6.78506 59.368 6.73125 59.4854 6.69211C59.5636 6.66276 59.681 6.56982 59.7495 6.48176C59.8425 6.35457 59.9012 6.32522 59.9941 6.3399C60.0773 6.35947 60.1458 6.33011 60.224 6.23717C60.2827 6.16868 60.4148 6.05617 60.5176 5.98279C60.6203 5.9143 60.7524 5.78712 60.8111 5.69906C60.8698 5.61101 60.9627 5.51806 61.0214 5.4936C61.1584 5.4349 61.178 5.25879 61.0606 5.09736C61.0067 5.01909 60.948 4.91147 60.9334 4.85276C60.9089 4.77449 60.8306 4.72068 60.6692 4.67666C60.4833 4.62285 60.4246 4.57393 60.3561 4.44185C60.3121 4.3489 60.1996 4.23149 60.1066 4.18257C59.9305 4.08474 59.9159 4.0456 59.5539 2.85687C59.4854 2.61228 59.3924 2.38236 59.3533 2.33833C59.2603 2.22582 58.7271 1.90296 58.644 1.90296C58.6097 1.90296 58.4532 1.98123 58.2966 2.07417C58.1401 2.16712 58.0031 2.24539 57.9933 2.24539C57.9836 2.24539 57.9689 2.18669 57.9591 2.10841C57.9493 2.00079 57.9151 1.97144 57.7928 1.96166C57.5286 1.9372 57.4454 2.0595 57.2155 2.83731L57.0003 3.55152L57.0198 4.21682C57.0345 4.8332 57.0296 4.88701 56.9318 5.0142C56.8682 5.09247 56.8242 5.20987 56.8291 5.30771C56.834 5.40555 56.8144 5.45936 56.7753 5.44957C56.6872 5.42022 56.3986 5.58655 56.291 5.72352C56.242 5.7969 56.1833 5.92409 56.1638 6.01703L56.1295 6.17847L55.5229 6.31544C54.7843 6.48176 53.6151 6.74103 53.346 6.79484C53.2384 6.8193 53.1014 6.85355 53.0476 6.87801C52.8862 6.93671 52.0693 7.83682 52.0301 7.99336C52.0106 8.06673 51.898 8.24284 51.7757 8.37982C51.536 8.65865 51.4969 8.84944 51.6534 9.01576C51.7024 9.07446 51.7611 9.16741 51.7806 9.231C51.8638 9.50495 50.8952 10.1164 50.5968 9.97946C50.5332 9.95011 50.4011 9.92565 50.3082 9.92565C50.1272 9.92565 49.2613 10.1164 49.1977 10.1702C49.1733 10.1898 49.1243 10.3317 49.0852 10.4833C49.0118 10.7622 49.0118 10.7671 49.139 10.9334C49.2173 11.0361 49.2564 11.1339 49.2369 11.1927C49.1928 11.3345 48.552 11.946 48.3221 12.0634C48.2047 12.1221 48.0677 12.2199 48.0139 12.2884C47.8818 12.445 47.51 12.6945 47.192 12.8363C47.0404 12.8999 46.8741 13.0271 46.7811 13.1396C46.649 13.3059 46.605 13.3304 46.4827 13.3108C46.3702 13.2962 46.287 13.3255 46.1452 13.438C45.9789 13.5701 45.9397 13.5848 45.7392 13.5505C45.4995 13.5114 45.0054 13.3108 45.0054 13.2521C45.0054 13.2326 45.0494 13.1592 45.1032 13.0907C45.157 13.0222 45.2011 12.9048 45.2011 12.8216C45.2011 12.7434 45.2451 12.6406 45.2989 12.5917C45.3527 12.5428 45.3967 12.4548 45.3967 12.3912C45.3967 12.2884 45.431 12.2444 45.6071 12.0977C45.6462 12.0634 45.7 11.8775 45.7343 11.6769L45.7979 11.3149L45.5924 10.7035C45.475 10.3708 45.3478 10.0577 45.3087 10.0137C45.2695 9.96968 45.1179 9.90119 44.9711 9.87184L44.6972 9.80825L44.5455 9.97946C44.4624 10.0724 44.3352 10.2241 44.2618 10.317C44.1884 10.4099 44.1151 10.4686 44.0955 10.4491C44.0759 10.4295 44.1346 10.3317 44.2325 10.2289C44.3303 10.1311 44.433 9.99903 44.4624 9.94033C44.5406 9.78379 44.526 9.18208 44.4379 8.91792C44.3792 8.73692 44.3743 8.66354 44.4183 8.55592C44.4526 8.47765 44.4624 8.37492 44.4477 8.326C44.4086 8.2086 44.0563 7.99336 43.7824 7.91998C43.6601 7.89063 43.5182 7.82214 43.4644 7.77322C43.4106 7.7243 43.2492 7.66071 43.1122 7.62157C42.9703 7.58733 42.8529 7.5433 42.8529 7.52373C42.8529 7.50417 43.0144 7.47971 43.2101 7.46992C43.6503 7.44547 43.9487 7.31338 43.9683 7.13238C43.9879 6.97584 43.9487 6.94649 43.44 6.74592C43.1709 6.6383 42.941 6.5796 42.7796 6.57471H42.535L42.5105 6.38392C42.4763 6.11487 42.3735 6.06595 42.08 6.17357C41.9479 6.2176 41.6642 6.29098 41.4539 6.33011C41.175 6.38392 41.0038 6.44752 40.8228 6.57471C40.5929 6.73125 40.5586 6.74103 40.2847 6.71168C40.0695 6.69211 39.9423 6.64809 39.82 6.55514C39.5901 6.37903 39.4091 6.30565 39.2085 6.30565C38.9688 6.30565 38.9835 6.19314 39.2574 5.92898C39.5998 5.60122 39.5509 5.45936 39.0715 5.40555C38.8074 5.3713 38.7878 5.3762 38.6802 5.50338C38.3915 5.85071 37.8583 6.2763 37.5795 6.37903C37.4523 6.42795 37.2958 6.51111 37.2273 6.56982C36.9729 6.78995 36.9435 6.80463 36.7234 6.77038C36.5473 6.74103 36.5082 6.72147 36.5277 6.65298C36.562 6.5209 36.4103 6.40349 36.2195 6.40349C36.1266 6.40349 35.9211 6.47198 35.7597 6.55025C35.5983 6.63341 35.4662 6.68722 35.4662 6.67744C35.4662 6.6383 35.8184 6.29098 36.063 6.09041C36.1902 5.98768 36.6011 5.70395 36.968 5.45446C37.5355 5.08268 37.6431 4.98974 37.6431 4.88701C37.6431 4.69622 37.4278 4.61795 36.9338 4.62774C36.65 4.63752 36.469 4.61306 36.3614 4.56414C36.2147 4.50055 36.1804 4.50055 35.8526 4.61795C35.4662 4.75003 35.383 4.74514 35.1433 4.56414C35.0602 4.50055 34.9574 4.44674 34.9183 4.44674C34.8743 4.44674 34.7667 4.37336 34.6737 4.28041C34.5318 4.13855 34.4634 4.1092 34.0965 4.05539C33.8176 4.01625 33.6268 4.01136 33.5094 4.04071C33.3676 4.07985 33.2893 4.07006 33.0741 3.97222C32.9322 3.91352 32.7708 3.85971 32.7218 3.85971C32.6534 3.85971 32.624 3.79122 32.5751 3.48793C32.5213 3.13571 32.5066 3.11125 32.355 3.04766C32.037 2.91558 31.8266 2.99874 31.7875 3.27268C31.7728 3.39009 31.7532 3.39498 31.3325 3.42922C30.6428 3.48304 29.5372 3.47814 27.3457 3.42433C24.8508 3.35585 24.2784 3.31182 20.9617 2.93514C19.4404 2.75904 19.323 2.74436 18.1489 2.56336C17.5179 2.47042 16.8672 2.36768 16.7058 2.34323C16.5444 2.31877 16.2606 2.27474 16.0699 2.24539C13.6386 1.88339 12.9097 1.7562 11.8384 1.51161C11.1535 1.35507 10.4148 1.18874 10.1996 1.14471C9.7104 1.03709 9.41689 0.973498 9.19675 0.924579C9.1038 0.905011 8.81518 0.841415 8.5608 0.782715C7.65091 0.582147 7.30359 0.494092 6.40348 0.244607C5.46424 -0.0146638 5.249 -0.0489076 5.20986 0.0538237ZM42.4322 7.55798C42.535 7.66071 42.535 7.66071 42.3344 7.88084C42.2268 8.00314 42.1681 8.11076 42.1779 8.18414C42.1828 8.24284 42.1436 8.35536 42.08 8.42873C42.0213 8.507 41.9724 8.63908 41.9724 8.72714C41.9724 8.92771 41.9479 8.94727 41.7816 8.88368C41.4832 8.77117 41.1995 9.1723 41.1261 9.82292C41.0283 10.6252 41.0821 11.0312 41.3658 11.6818C41.6349 12.2933 41.3903 13.3891 40.9109 13.7169C40.6809 13.8734 40.5635 13.8245 40.4461 13.5163C40.3972 13.3842 40.3092 13.2424 40.2602 13.1934C40.1918 13.1396 40.1624 13.0516 40.1624 12.8999C40.1575 12.7874 40.1086 12.4352 40.0401 12.127C39.9374 11.6231 39.9325 11.5547 39.9961 11.4275C40.045 11.3394 40.0646 11.1731 40.0597 10.9578C40.0499 10.6888 40.0695 10.5861 40.1575 10.4491C40.226 10.3366 40.2602 10.1996 40.2602 10.0333C40.2602 9.8963 40.2798 9.774 40.3043 9.75933C40.3923 9.70552 40.6125 9.04022 40.6173 8.8103C40.6271 8.60484 40.6173 8.58038 40.5097 8.56571C40.4461 8.55592 40.3728 8.5706 40.3434 8.59995C40.2211 8.72225 40.2211 8.63908 40.3434 8.3896C40.4755 8.11565 40.5782 8.04716 40.7837 8.09608C40.9353 8.13522 41.1799 8.03249 41.2142 7.91508C41.2337 7.86127 41.312 7.81236 41.4245 7.79279C41.5223 7.77322 41.6495 7.7243 41.7033 7.67538C41.9431 7.46992 42.2904 7.41122 42.4322 7.55798ZM54.6179 15.6541C54.6717 15.7372 54.613 15.7568 54.5446 15.6736C54.5054 15.6296 54.5054 15.6002 54.5348 15.6002C54.5641 15.6002 54.6033 15.6247 54.6179 15.6541Z" fill="#6BA410"/>
                        </svg>,
                colorClass: `color-usdiscovery`
            }
            return (
                <th key={pkgData.id} className={`bold textxlrg ${pkgVars.colorClass} ${pkgVars.colorClass}--offerings-${this.props.variables.offerings} textCenter align-base ${(index === 0 || index === (array.length - 1)) ? `rel-pos` : ``} `}>
                    <span className="show768 hidden-lg-up">
                        {pkgVars.imgFile}
                        {pkgData.name.split(' ').map((str, index) => <span key={index}><br />{str}</span>)}
                    </span> 
                    <span className="tb-plan-head hide768">
                        {pkgData.name}
                        {pkgVars.imgFile}
                    </span>
                </th>
            )
        })
        const recordHeadingCells = subs.display.packages.map((pkgData, index, array) =>{
            const multipleTest = array.length > 1
            const firstTest = multipleTest && index === 0
            const lastTest = multipleTest && index === (array.length - 1)
            const recordsTriangleClasses = []
            array.forEach((pD) => recordsTriangleClasses.push(`triangle-start--${pD.id}`))
            const pkgVars = pkgData.order === 3  ? {
                colorClass: `color-allaccess`
            } : pkgData.order === 2 ? {
                colorClass: `color-worldexplorer`
            } : {
                colorClass: `color-usdiscovery`
            }
            return (
                <th key={pkgData.id} className={`bold textxlrg ${pkgVars.colorClass} ${pkgVars.colorClass}--offerings-${this.props.variables.offerings} textCenter align-base ${(index === 0 || index === (array.length - 1)) ? `rel-pos` : ``} ${firstTest ? `triangle-start ${recordsTriangleClasses.join(' ')}` : ``} triangle-start--offerings-${this.props.variables.offerings}`}>
                    {firstTest && <div className="least-rec-txt">Least Records</div>}
                    {lastTest && <div className="most-rec-txt">Most<br /><span>Records</span></div>}
                </th>
            )
        })
        return (
            <div className={classesMaker('sparklydragon')}>
                <section className={`plan-comparison-chart plan-comparison-chart--offerings-${this.props.variables.offerings}`} id="plan-comparision">
                    <table>
                        <tbody>
                            <tr className="table-title">
                                <th className="bold text2xlrg" colSpan={mobileTest ? subs.display.packages.length : 1}>
                                    <span className="text3xlrg">Plan Comparison</span>
                                    <br />
                                    <div className="topSpacingBlock includedInPlanText">
                                        Included in All Plans
                                        <button type="button" className={`showHideBtn link iconAfter textlrg btn-pointer ${this.state.showIncludedInAll ? `iconArrowUpAfter` : `iconArrowDownAfter`}`} onClick={this.toggleAllIncludedState}>
                                            <span className="mr-1 textlrg">{this.state.showIncludedInAll ? `Hide` : `Show`} All</span>
                                        </button>
                                    </div>
                                </th>
                                {!mobileTest && globalHeadingCells}
                            </tr>
                            {mobileTest && 
                                <tr className="mobile-row mobile-row--global-heading">
                                    {globalHeadingCells}
                                </tr>
                            }
                            {this.state.showIncludedInAll && useThisFeaturesArray.filter(({ type }) => type === `global-feature`).map((featureData, index) => (
                                <FeatureRow key={index} featureData={featureData} idx={index} subs={subs} mobileTest={mobileTest} offeringsVar={this.props.variables.offerings} />
                            ))}
                            <tr className="table-title">
                                <th className="rec-acc bold text2xlrg" colSpan={mobileTest ? subs.display.packages.length : 1}>
                                    <div className="topSpacingBlock">Record Access</div>
                                </th>
                                {!mobileTest && recordHeadingCells}
                            </tr>
                            {mobileTest && 
                                <tr className="mobile-row mobile-row--record-access">
                                    {recordHeadingCells}
                                </tr>
                            }
                            {useThisFeaturesArray.filter(({ type }) => type === `record-access`).map((featureData, index) => (
                                <FeatureRow key={index} featureData={featureData} idx={index} subs={subs} mobileTest={mobileTest} offeringsVar={this.props.variables.offerings} />
                            ))}
                        </tbody>
                    </table>
                </section>
            </div>              
        )
    }
}

export default connect(mapStateToProps)(SparklyDragon);